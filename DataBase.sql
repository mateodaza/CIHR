-- MySQL Script generated by MySQL Workbench
-- 11/15/16 13:05:39
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DataBase
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DataBase
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DataBase` DEFAULT CHARACTER SET utf8 ;
USE `DataBase` ;

-- -----------------------------------------------------
-- Table `DataBase`.`Archivo_Tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Archivo_Tipo` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Archivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Archivo` (
  `codigo` INT NOT NULL,
  `tipo_codigo` INT NULL,
  `nombre` VARCHAR(45) NULL,
  `fecha` DATETIME NULL,
  PRIMARY KEY (`codigo`),
  CONSTRAINT `Tipo_cod`
    FOREIGN KEY (`tipo_codigo`)
    REFERENCES `DataBase`.`Archivo_Tipo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Funcionario`
-- -----------------------------------------------------
CREATE TABLE DataBase.Funcionario (
    funcionario_cod INT,
    funcionario_pwd INT,
    funcionario_est INT,
    funcionario_nombre VARCHAR(255)
);
INSERT INTO DataBase.Funcionario VALUES("2000","123","1","Juan");
INSERT INTO DataBase.Funcionario VALUES("2001","456","0","Carlos");
INSERT INTO DataBase.Funcionario VALUES("2002","789","0","Andres");
INSERT INTO DataBase.Funcionario VALUES("2003","123","1","NoName");

-- -----------------------------------------------------
-- Table `DataBase`.`Ausencia_Motivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Ausencia_Motivo` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Ausencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Ausencia` (
  `codigo` VARCHAR(45) NOT NULL,
  `fecha` DATETIME NULL,
  `minutos` INT NULL,
  `nota` VARCHAR(45) NULL,
  `funcionario_codigo` VARCHAR(45) NULL,
  `motivo_codigo` INT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Funcionario_codigo_idx` (`funcionario_codigo` ASC),
  INDEX `Motivo_codigo_idx` (`motivo_codigo` ASC),
  CONSTRAINT `Funcionario_codigo`
    FOREIGN KEY (`funcionario_codigo`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Motivo_codigo`
    FOREIGN KEY (`motivo_codigo`)
    REFERENCES `DataBase`.`Ausencia_Motivo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Banco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Banco` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Cargo_Nivel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Cargo_Nivel` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Rol_Estrategico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Rol_Estrategico` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Cargo` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `nivel_codigo` INT NULL,
  `rolestrategico_codigo` INT NULL,
  PRIMARY KEY (`codigo`),
  CONSTRAINT `Nivel_codigo`
    FOREIGN KEY (`nivel_codigo`)
    REFERENCES `DataBase`.`Cargo_Nivel` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Rol_estrategico_codigo`
    FOREIGN KEY (`rolestrategico_codigo`)
    REFERENCES `DataBase`.`Rol_Estrategico` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Competencia_Tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Competencia_Tipo` (
  `tipo_cod` INT NOT NULL,
  `tipo_nom` VARCHAR(45) NULL,
  PRIMARY KEY (`tipo_cod`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Competencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Competencia` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(45) NULL,
  `tipo_codigo` INT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Tipo_Codigo_idx` (`tipo_codigo` ASC),
  CONSTRAINT `Tipo_Codigo`
    FOREIGN KEY (`tipo_codigo`)
    REFERENCES `DataBase`.`Competencia_Tipo` (`tipo_cod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Competencia_Nivel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Competencia_Nivel` (
  `nivel_cod` INT NOT NULL,
  `competencia_cod` INT NULL,
  `nivel_nom` VARCHAR(45) NULL,
  `nivel_des` VARCHAR(45) NULL,
  `nivel_num` INT NULL,
  PRIMARY KEY (`nivel_cod`),
  INDEX `Competencia_Codigo_idx` (`competencia_cod` ASC),
  CONSTRAINT `Competencia_Codigo`
    FOREIGN KEY (`competencia_cod`)
    REFERENCES `DataBase`.`Competencia` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Cargo_Perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Cargo_Perfil` (
  `cargo_codigo` INT NOT NULL,
  `competencia_codigo` INT NULL,
  `nivel_codigo` INT NULL,
  `nivel_codigo_predeterminado` INT NULL,
  PRIMARY KEY (`cargo_codigo`, `competencia_codigo`),
  INDEX `Competencia_Codigo_idx` (`competencia_codigo` ASC),
  INDEX `Nivel_Codigo_idx` (`nivel_codigo` ASC),
  CONSTRAINT `Competencia_Codigo`
    FOREIGN KEY (`competencia_codigo`)
    REFERENCES `DataBase`.`Competencia` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Nivel_Codigo`
    FOREIGN KEY (`nivel_codigo`)
    REFERENCES `DataBase`.`Competencia_Nivel` (`nivel_cod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Celebracion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Celebracion` (
  `fecha` DATETIME NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`fecha`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sisAplicacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sisAplicacion` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sisModulo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sisModulo` (
  `codigo` INT NOT NULL,
  `aplicacion_codigo` INT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Aplicacion_Codigo_idx` (`aplicacion_codigo` ASC),
  CONSTRAINT `Aplicacion_Codigo`
    FOREIGN KEY (`aplicacion_codigo`)
    REFERENCES `DataBase`.`sisAplicacion` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sisAccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sisAccion` (
  `codigo` INT NOT NULL,
  `modulo_codigo` INT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Modulo_Codigo_idx` (`modulo_codigo` ASC),
  CONSTRAINT `Modulo_Codigo`
    FOREIGN KEY (`modulo_codigo`)
    REFERENCES `DataBase`.`sisModulo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sisGrupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sisGrupo` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sisGrupo_Funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sisGrupo_Funcionario` (
  `grupo_codigo` INT NOT NULL,
  `funcionario_codigo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`grupo_codigo`, `funcionario_codigo`),
  INDEX `Funcionario_Codigo_idx` (`funcionario_codigo` ASC),
  CONSTRAINT `Grupo_Codigo`
    FOREIGN KEY (`grupo_codigo`)
    REFERENCES `DataBase`.`sisGrupo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Funcionario_Codigo`
    FOREIGN KEY (`funcionario_codigo`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sis_Rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sis_Rol` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sisGrupo_Rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sisGrupo_Rol` (
  `grupo_codigo` INT NOT NULL,
  `rol_codigo` INT NOT NULL,
  PRIMARY KEY (`grupo_codigo`, `rol_codigo`),
  INDEX `Rol_Codigo_idx` (`rol_codigo` ASC),
  CONSTRAINT `Grupo_Codigo`
    FOREIGN KEY (`grupo_codigo`)
    REFERENCES `DataBase`.`sisGrupo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Rol_Codigo`
    FOREIGN KEY (`rol_codigo`)
    REFERENCES `DataBase`.`sis_Rol` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sisRol_Accion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sisRol_Accion` (
  `rol_codigo` INT NOT NULL,
  `accion_codigo` INT NOT NULL,
  PRIMARY KEY (`rol_codigo`, `accion_codigo`),
  INDEX `Accion_Codigo_idx` (`accion_codigo` ASC),
  CONSTRAINT `Rol_Codigo`
    FOREIGN KEY (`rol_codigo`)
    REFERENCES `DataBase`.`sis_Rol` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Accion_Codigo`
    FOREIGN KEY (`accion_codigo`)
    REFERENCES `DataBase`.`sisAccion` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sisEmpresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sisEmpresa` (
  `codigo` VARCHAR(45) NOT NULL,
  `pais` VARCHAR(45) NULL,
  `ciudad` VARCHAR(45) NULL,
  `nombre` VARCHAR(45) NULL,
  `tipo_documento` VARCHAR(45) NULL,
  `departamento_raiz` VARCHAR(45) NULL,
  `mision` VARCHAR(45) NULL,
  `vision` VARCHAR(45) NULL,
  `coordinador_rrhh` VARCHAR(45) NULL,
  `email_rrhh` VARCHAR(45) NULL,
  `smtp_servidor` VARCHAR(45) NULL,
  `smtp_usuario` VARCHAR(45) NULL,
  `smtp_contraseña` VARCHAR(45) NULL,
  `smtp_email` VARCHAR(45) NULL,
  `webhost` VARCHAR(45) NULL,
  `salario_minimo` DOUBLE NULL,
  `aporte_fondo_pensiones_1` DOUBLE NULL,
  `aporte_fondo_pensiones_2` DOUBLE NULL,
  `salario_aporte_fondo_pensiones` DOUBLE NULL,
  `aporte_salud` DOUBLE NULL,
  `subsidio_transporte` DOUBLE NULL,
  `salario_subsidio_transporte` DOUBLE NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`sisTabla`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`sisTabla` (
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Contrato_Tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Contrato_Tipo` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Departamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Departamento` (
  `codigo` INT NOT NULL,
  `departamento_codigo_superior` INT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Contrato_Cuenta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Contrato_Cuenta` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`EPS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`EPS` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Contrato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Contrato` (
  `codigo` INT NOT NULL,
  `tipo_persona` VARCHAR(45) NULL,
  `tipo_codigo` INT NULL,
  `departamento_codigo` INT NULL,
  `cargo_codigo` INT NULL,
  `email` VARCHAR(45) NULL,
  `cuenta_codigo` INT NULL,
  `salario` INT NULL,
  `funcionario_codigo` VARCHAR(45) NULL,
  `fecha_inicio` DATETIME NULL,
  `fecha_final` DATETIME NULL,
  `eps_cod` INT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `TIPO_CODIGO` (`tipo_codigo` ASC),
  INDEX `DEPARTAMENTO_CODIGo` (`departamento_codigo` ASC),
  INDEX `CARGO_CODIGO` (`cargo_codigo` ASC),
  INDEX `CUENTA_CODIGO` (`cuenta_codigo` ASC),
  INDEX `FUNCIONARIO` (`funcionario_codigo` ASC),
  INDEX `FINALIZACION` (`fecha_final` ASC),
  INDEX `EPS` (`eps_cod` ASC),
  CONSTRAINT `Funcionario_Codigo`
    FOREIGN KEY (`funcionario_codigo`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Tipo_Codigo`
    FOREIGN KEY (`tipo_codigo`)
    REFERENCES `DataBase`.`Contrato_Tipo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Departamento_Codigo`
    FOREIGN KEY (`departamento_codigo`)
    REFERENCES `DataBase`.`Departamento` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Cargo_Codigo`
    FOREIGN KEY (`cargo_codigo`)
    REFERENCES `DataBase`.`Cargo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Cuenta_Codigo`
    FOREIGN KEY (`cuenta_codigo`)
    REFERENCES `DataBase`.`Contrato_Cuenta` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `EPS_Codigo`
    FOREIGN KEY (`eps_cod`)
    REFERENCES `DataBase`.`EPS` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Contrato_Historia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Contrato_Historia` (
  `codigo` INT NOT NULL,
  `contrato_codigo` INT NULL,
  `fecha` DATETIME NULL,
  `campo` VARCHAR(45) NULL,
  `valor_anterior` VARCHAR(45) NULL,
  `valor_nuevo` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Historia_Codigo_idx` (`contrato_codigo` ASC),
  CONSTRAINT `Historia_Codigo`
    FOREIGN KEY (`contrato_codigo`)
    REFERENCES `DataBase`.`Contrato` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Contrato_Salario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Contrato_Salario` (
  `contrato_codigo` INT NOT NULL,
  `fecha` DATETIME NULL,
  `salario_anterior` DOUBLE NULL,
  `aumento` DOUBLE NULL,
  PRIMARY KEY (`contrato_codigo`),
  CONSTRAINT `Contrato_Codigo`
    FOREIGN KEY (`contrato_codigo`)
    REFERENCES `DataBase`.`Contrato` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Departamento_Cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Departamento_Cargo` (
  `departamento_codigo` INT NOT NULL,
  `cargo_codigo` INT NULL,
  PRIMARY KEY (`departamento_codigo`, `cargo_codigo`),
  INDEX `Cargo_Codigo_idx` (`cargo_codigo` ASC),
  CONSTRAINT `Cargo_Codigo`
    FOREIGN KEY (`cargo_codigo`)
    REFERENCES `DataBase`.`Cargo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Departamento_Codigo`
    FOREIGN KEY (`departamento_codigo`)
    REFERENCES `DataBase`.`Departamento` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Departamento_Jefe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Departamento_Jefe` (
  `departamento_codigo` INT NOT NULL,
  `cargo_codigo` INT NULL,
  PRIMARY KEY (`departamento_codigo`),
  CONSTRAINT `Cargo_Codigo`
    FOREIGN KEY (`cargo_codigo`)
    REFERENCES `DataBase`.`Cargo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Departamento_Codigo`
    FOREIGN KEY (`departamento_codigo`)
    REFERENCES `DataBase`.`Departamento` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Estrato_Socioeconomico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Estrato_Socioeconomico` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Estudio_Centro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Estudio_Centro` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Estudio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Estudio` (
  `codigo` INT NOT NULL,
  `funcionario_codigo` VARCHAR(45) NOT NULL,
  `titulo` VARCHAR(45) NULL,
  `fecha_inicio` DATETIME NULL,
  `fecha_grado` DATETIME NULL,
  `centro_codigo` INT NULL,
  `porcentaje_apoyo` INT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `FUNCIONARIO_COD` (`funcionario_codigo` ASC),
  INDEX `Centro_Codigo_idx` (`centro_codigo` ASC),
  CONSTRAINT `Funcionario_codigo`
    FOREIGN KEY (`funcionario_codigo`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Centro_Codigo`
    FOREIGN KEY (`centro_codigo`)
    REFERENCES `DataBase`.`Estudio_Centro` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Evaluacion_Periodo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Evaluacion_Periodo` (
  `codigo` INT NOT NULL,
  `fecha_creacion` DATETIME NULL,
  `nombre` VARCHAR(45) NULL,
  `publicado` TINYINT(1) NULL,
  `fecha_publicado` DATETIME NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Evaluacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Evaluacion` (
  `codigo` VARCHAR(45) NOT NULL,
  `periodo_codigo` INT NULL,
  `cargo_cod` INT NULL,
  `enviada` TINYINT(1) NULL,
  `evaluada` TINYINT(1) NULL,
  `comentario_evaluado` VARCHAR(100) NULL,
  `comentario_evaluador` VARCHAR(100) NULL,
  `funcionario_codigo` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Periodo_Codigo_idx` (`periodo_codigo` ASC),
  INDEX `Cargo_Codigo_idx` (`cargo_cod` ASC),
  INDEX `Funcionario_Codigo_idx` (`funcionario_codigo` ASC),
  CONSTRAINT `Periodo_Codigo`
    FOREIGN KEY (`periodo_codigo`)
    REFERENCES `DataBase`.`Evaluacion_Periodo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Cargo_Codigo`
    FOREIGN KEY (`cargo_cod`)
    REFERENCES `DataBase`.`Cargo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Funcionario_Codigo`
    FOREIGN KEY (`funcionario_codigo`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Evaluacion_Detalle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Evaluacion_Detalle` (
  `evaluacion_codigo` VARCHAR(45) NOT NULL,
  `competencia_codigo` INT NULL,
  `nivel_codigo_evaluado` INT NULL,
  `nivel_codigo_evaluador` INT NULL,
  `nivel_codigo_perfil` INT NULL,
  `nota_evaluado` VARCHAR(45) NULL,
  `nota_evaluador` VARCHAR(45) NULL,
  PRIMARY KEY (`evaluacion_codigo`),
  INDEX `Competencia_Codigo_idx` (`competencia_codigo` ASC),
  CONSTRAINT `Evaluacion_Codigo`
    FOREIGN KEY (`evaluacion_codigo`)
    REFERENCES `DataBase`.`Evaluacion` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Competencia_Codigo`
    FOREIGN KEY (`competencia_codigo`)
    REFERENCES `DataBase`.`Competencia` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Evaluacion_Retroalimentacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Evaluacion_Retroalimentacion` (
  `evaluacion_codigo` VARCHAR(45) NOT NULL,
  `fecha` DATETIME NULL,
  `retroalimentacion` VARCHAR(200) NULL,
  PRIMARY KEY (`evaluacion_codigo`),
  CONSTRAINT `Evaluacion_Codigo`
    FOREIGN KEY (`evaluacion_codigo`)
    REFERENCES `DataBase`.`Evaluacion` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Familiar_Relacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Familiar_Relacion` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Familiar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Familiar` (
  `codigo` INT NOT NULL,
  `funcionario_codigo` VARCHAR(45) NULL,
  `nombres` VARCHAR(45) NULL,
  `apellidos` VARCHAR(45) NULL,
  `fecha_nacimiento` DATETIME NULL,
  `fallecido` TINYINT(1) NULL,
  `relacion_codigo` INT NULL,
  `identificacion` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Funcionario_Codigo_idx` (`funcionario_codigo` ASC),
  INDEX `Relacion_Codigo_idx` (`relacion_codigo` ASC),
  CONSTRAINT `Funcionario_Codigo`
    FOREIGN KEY (`funcionario_codigo`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Relacion_Codigo`
    FOREIGN KEY (`relacion_codigo`)
    REFERENCES `DataBase`.`Familiar_Relacion` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Festivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Festivo` (
  `fecha` DATETIME NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`fecha`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Fondo_Cesantias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Fondo_Cesantias` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Fondo_Empleados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Fondo_Empleados` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Fondo_Pensiones_Voluntarias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Fondo_Pensiones_Voluntarias` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Funcionario_Estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Funcionario_Estado` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Funcionario_Foto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Funcionario_Foto` (
  `funcionario_codigo` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `fecha` DATETIME NULL,
  PRIMARY KEY (`funcionario_codigo`),
  CONSTRAINT `Funcionario_codigo`
    FOREIGN KEY (`funcionario_codigo`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Funcionario_Sexo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Funcionario_Sexo` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Horas_Extras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Horas_Extras` (
  `funcionario_cod` VARCHAR(45) NOT NULL,
  `contrato_cod` INT NULL,
  `horas_diurnas_trabajadas` INT NULL,
  `horas_nocturnas_trabajadas` INT NULL,
  `total_horas_trabajadas` INT NULL,
  PRIMARY KEY (`funcionario_cod`),
  INDEX `Contrato_Codigo_idx` (`contrato_cod` ASC),
  CONSTRAINT `Contrato_Codigo`
    FOREIGN KEY (`contrato_cod`)
    REFERENCES `DataBase`.`Contrato` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Funcionario_Codigo`
    FOREIGN KEY (`funcionario_cod`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Pais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Pais` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Informacion_Contacto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Informacion_Contacto` (
  `info_contacto_codigo` INT NOT NULL,
  `info_contacto_direccion` VARCHAR(45) NULL,
  `info_contacto_barrio` VARCHAR(45) NULL,
  `info_contacto_telefono` VARCHAR(45) NULL,
  `info_contacto_emergencia` VARCHAR(45) NULL,
  `info_contacto_email` VARCHAR(45) NULL,
  `info_contacto_celular` VARCHAR(45) NULL,
  `info_contacto_pais_cod` INT NULL,
  PRIMARY KEY (`info_contacto_codigo`),
  INDEX `Info_Pais_Codigo_idx` (`info_contacto_pais_cod` ASC),
  CONSTRAINT `Info_Pais_Codigo`
    FOREIGN KEY (`info_contacto_pais_cod`)
    REFERENCES `DataBase`.`Pais` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Memorando`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Memorando` (
  `codigo` INT NOT NULL,
  `remitente` VARCHAR(45) NULL,
  `fecha` DATETIME NULL,
  `asunto` VARCHAR(45) NULL,
  `detalle` VARCHAR(45) NULL,
  `destinatario` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Funcionario_Envia_idx` (`remitente` ASC),
  INDEX `Funcionario_Recibe_idx` (`destinatario` ASC),
  CONSTRAINT `Funcionario_Envia`
    FOREIGN KEY (`remitente`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Funcionario_Recibe`
    FOREIGN KEY (`destinatario`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Persona_Juridica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Persona_Juridica` (
  `num_id_juridico` INT NOT NULL,
  `funcionario_cod` VARCHAR(45) NOT NULL,
  `expedicion_fecha_juridico` DATETIME NULL,
  `tipo_asociacion` VARCHAR(45) NULL,
  `info_contacto_codigo` INT NULL,
  `nombre_contribuyente` VARCHAR(45) NULL,
  PRIMARY KEY (`num_id_juridico`),
  INDEX `Info_Contacto_Codigo_idx` (`info_contacto_codigo` ASC),
  CONSTRAINT `Funcionario_Codigo`
    FOREIGN KEY (`funcionario_cod`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Info_Contacto_Codigo`
    FOREIGN KEY (`info_contacto_codigo`)
    REFERENCES `DataBase`.`Informacion_Contacto` (`info_contacto_codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Persona_Natural`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Persona_Natural` (
  `num_id_natural` INT NOT NULL,
  `fondo_pensiones_voluntarias_codigo` INT NULL,
  `estrato_codigo` INT NULL,
  `nombre_1` VARCHAR(45) NULL,
  `nombre_2` VARCHAR(45) NULL,
  `apellido_1` VARCHAR(45) NULL,
  `apellido_2` VARCHAR(45) NULL,
  `factor_rh` VARCHAR(45) NULL,
  `grupo_sanguineo` VARCHAR(45) NULL,
  `sexo_codigo` INT NULL,
  `fecha_nacimiento` DATETIME NULL,
  `lugar_nacimiento` VARCHAR(45) NULL,
  `expedicion_fecha` DATETIME NULL,
  `expedicion_lugar` VARCHAR(45) NULL,
  `estado_civil` VARCHAR(45) NULL,
  `tipo_id_natural` VARCHAR(45) NULL,
  `info_contacto_codigo` INT NULL,
  PRIMARY KEY (`num_id_natural`),
  INDEX `Estrato_Codigo_idx` (`estrato_codigo` ASC),
  INDEX `Sexo_Codigo_idx` (`sexo_codigo` ASC),
  INDEX `Info_Contacto_Codigo_idx` (`info_contacto_codigo` ASC),
  INDEX `Fondo_Pensiones_idx` (`fondo_pensiones_voluntarias_codigo` ASC),
  CONSTRAINT `Estrato_Codigo`
    FOREIGN KEY (`estrato_codigo`)
    REFERENCES `DataBase`.`Estrato_Socioeconomico` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Sexo_Codigo`
    FOREIGN KEY (`sexo_codigo`)
    REFERENCES `DataBase`.`Funcionario_Sexo` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Info_Contacto_Codigo`
    FOREIGN KEY (`info_contacto_codigo`)
    REFERENCES `DataBase`.`Informacion_Contacto` (`info_contacto_codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Fondo_Pensiones`
    FOREIGN KEY (`fondo_pensiones_voluntarias_codigo`)
    REFERENCES `DataBase`.`Fondo_Pensiones_Voluntarias` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Registro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Registro` (
  `codigo` INT NOT NULL,
  `tipo` VARCHAR(45) NULL,
  `fecha` DATETIME NULL,
  `detalle` VARCHAR(45) NULL,
  `funcionario_codigo` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Funcionario_Codigo_idx` (`funcionario_codigo` ASC),
  CONSTRAINT `Funcionario_Codigo`
    FOREIGN KEY (`funcionario_codigo`)
    REFERENCES `DataBase`.`Funcionario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Vacaciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Vacaciones` (
  `codigo` VARCHAR(45) NOT NULL,
  `periodo` INT NULL,
  `horas` INT NULL,
  `ejecutadas` INT NULL,
  `fecha` DATETIME NULL,
  `notificada` TINYINT(1) NULL,
  `contrato_codigo` INT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Contrato_Codigo_idx` (`contrato_codigo` ASC),
  CONSTRAINT `Contrato_Codigo`
    FOREIGN KEY (`contrato_codigo`)
    REFERENCES `DataBase`.`Contrato` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Vacaciones_Detalle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Vacaciones_Detalle` (
  `codigo` INT NOT NULL,
  `vacaciones_codigo` VARCHAR(45) NULL,
  `autorizada` TINYINT(1) NULL,
  `fecha` DATETIME NULL,
  `horas` INT NULL,
  `franja` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Vacaciones_Codigo_idx` (`vacaciones_codigo` ASC),
  CONSTRAINT `Vacaciones_Codigo`
    FOREIGN KEY (`vacaciones_codigo`)
    REFERENCES `DataBase`.`Vacaciones` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Vacaciones_Liquidacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Vacaciones_Liquidacion` (
  `codigo` VARCHAR(45) NOT NULL,
  `vacaciones_codigo` VARCHAR(45) NULL,
  `fecha_vencimiento` DATETIME NULL,
  `salario` DOUBLE NULL,
  `fecha_entrada` DATETIME NULL,
  `dias` INT NULL,
  `valor_dia` DOUBLE NULL,
  `subsidio_transporte` INT NULL,
  `subsidio_transporte_valor` DOUBLE NULL,
  `subsidio` INT NULL,
  `devengaciones` DOUBLE NULL,
  `devengaciones_detalle` VARCHAR(45) NULL,
  `aportes_salud` DOUBLE NULL,
  `aportes_fondo_pensiones` DOUBLE NULL,
  `descuentos` DOUBLE NULL,
  `descuentos_detalle` VARCHAR(45) NULL,
  `numero_interno_autorizacion` VARCHAR(45) NULL,
  `fecha_liquidacion` DATETIME NULL,
  `banco_codigo` INT NULL,
  `autorizada` TINYINT(1) NULL,
  `fecha_autorizado` DATETIME NULL,
  `valor_autorizado` DOUBLE NULL,
  PRIMARY KEY (`codigo`),
  INDEX `Vacaciones_Codigo_idx` (`vacaciones_codigo` ASC),
  INDEX `Banco_Codigo_idx` (`banco_codigo` ASC),
  CONSTRAINT `Vacaciones_Codigo`
    FOREIGN KEY (`vacaciones_codigo`)
    REFERENCES `DataBase`.`Vacaciones` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Banco_Codigo`
    FOREIGN KEY (`banco_codigo`)
    REFERENCES `DataBase`.`Banco` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DataBase`.`Vacaciones_Restriccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Vacaciones_Restriccion` (
  `codigo` INT NOT NULL,
  `limite_inferior` INT NULL,
  `limite_superior` INT NULL,
  `dias` INT NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;

USE `DataBase` ;

-- -----------------------------------------------------
-- Placeholder table for view `DataBase`.`Evaluaciones_Resultado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`Evaluaciones_Resultado` (`funcionario_codigo` INT, `codigo` INT, `PromedioAutoevaluacion` INT, `PromedioEvaluacion` INT);

-- -----------------------------------------------------
-- Placeholder table for view `DataBase`.`CargosPorDepartamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DataBase`.`CargosPorDepartamento` (`departamento_codigo_superior` INT, `codigo` INT, `nombre` INT, `cargos_can` INT);

-- -----------------------------------------------------
-- procedure eval_companeros
-- -----------------------------------------------------

DELIMITER $$
USE `DataBase`$$
CREATE PROCEDURE eval_companeros (in departamento_codigo int)
BEGIN
    SELECT Persona_Natural.apellido_1 + ' ' + Persona_Natural.nombre_1 as Funcionario, Cargo.nombre as Cargo, Contrato.departamento_codigo
	FROM Persona_Natural, Cargo, Contrato 
	WHERE (Persona_Natural.info_contacto_codigo=Informacion_Contacto.info_contacto_codigo and Informacion_Contacto.info_contacto_codigo=Persona_Juridica.info_contacto_codigo);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `DataBase`.`Evaluaciones_Resultado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DataBase`.`Evaluaciones_Resultado`;
USE `DataBase`;
CREATE  OR REPLACE VIEW `Evaluaciones_Resultado` AS
    SELECT 
        funcionario.codigo AS funcionario_codigo,
        evaluacion.codigo,
        AVG(avg_autoevaluacion) AS PromedioAutoevaluacion,
        AVG(avg_evaluacion) AS PromedioEvaluacion
    FROM
        dbo.view_avg_evaluacion_tipo
    GROUP BY funcionario.codigo , evaluacion.codigo;

-- -----------------------------------------------------
-- View `DataBase`.`CargosPorDepartamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DataBase`.`CargosPorDepartamento`;
USE `DataBase`;
CREATE  OR REPLACE VIEW `CargosPorDepartamento` AS
    SELECT 
        dbo.Departamento.departamento_codigo_superior,
        dbo.Departamento.codigo,
        dbo.Departamento.nombre,
        COUNT(dbo.Cargo.codigo) AS cargos_can
    FROM
        dbo.Cargo
            INNER JOIN
        dbo.Departamento_Cargo ON dbo.Cargo.codigo = dbo.Departamento_Cargo.departamento_codigo
            RIGHT OUTER JOIN
        dbo.Departamento ON dbo.Departamento_Cargo.departamento_codigo = dbo.Departamento.codigo
    GROUP BY dbo.Departamento.departamento_codigo_superior , dbo.Departamento.cogido , dbo.Departamento.nombre;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
